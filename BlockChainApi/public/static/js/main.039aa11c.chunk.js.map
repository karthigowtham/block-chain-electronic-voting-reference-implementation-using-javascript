{"version":3,"sources":["voteIcon.png","Component/Home.jsx","Component/Candidate.jsx","Component/Vote.jsx","Component/Result.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Chain","props","time","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","ch","timestamp","txn","transactions","react_default","a","createElement","blockId","className","data-toggle","data-target","onClick","viewTxn","PrintChainList","blockChain","map","i","Home_Chain","key","index","Transaction","id","voter","candidate","vote","Home","state","chain","hash","prevHash","nonce","pendingTransactions","rejectedTransactions","selectedTxn","modelTitle","getBlockList","self","Object","assertThisInitialized","_this","axios","get","then","resp","setState","data","err","console","log","title","updateMyChain","this","_this2","scope","Home_PrintChainList","tabIndex","role","type","data-dismiss","aria-label","aria-hidden","Home_Transaction","Component","Candidates","name","symbol","party","count","CandidateTag","candidates","cnd","value","onChange","handleChange","Vote","selectedId","alreadyVoted","voteStatus","user","getLoggedInUser","username","checkMyVote","myTransactionStatus","usr","event","target","handleSubmit","preventDefault","candidateName","find","post","response","catch","error","alert","onSubmit","disabled","Vote_CandidateTag","Result","votingCount","mine","message","Result_CandidateTag","Main","Switch","Route","exact","path","component","Menu","Link","to","App","connectedUrl","App_Menu","src","voteImg","alt","App_Main","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.039aa11c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/voteIcon.908a62ad.png\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Chain = (props) => {\r\n    let time = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(props.ch.timestamp)\r\n    let txn = props.ch.transactions;\r\n    return (\r\n        <tr>\r\n            <td>{props.ch.blockId}</td>\r\n            <td>{time}</td>\r\n            <td><button className='btn btn-sm btn-warning' data-toggle='modal' data-target='#viewTxns' onClick={() => props.viewTxn(txn, 'Selected Transactions')}>View Transaction</button></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst PrintChainList = (props) => {\r\n    return (\r\n        props.blockChain.map((ch, i) => <Chain ch={ch} key={ch.blockId} index={i} viewTxn={props.viewTxn} />)\r\n    );\r\n}\r\n\r\nconst Transaction = (props) => {\r\n    return (\r\n        <tr>\r\n            <th>{props.txn.id}</th>\r\n            <th>{props.txn.voter}</th>\r\n            <th>{props.txn.candidate}</th>\r\n            <th>{props.txn.vote}</th>\r\n        </tr>\r\n    );\r\n}\r\nexport default class Home extends Component {\r\n    state = {\r\n        blockChain: {\r\n            chain:\r\n            [\r\n                {\r\n                    blockId: \"ad28773d-85e7-48d7-8fd3-3ccda2fc96b1\",\r\n                    timestamp: 1539157813611,\r\n                    transactions: \"Genesys Block\",\r\n                    hash: \"43b92a4e296e9c38e6e93785ae1ac5cc618adeb5cb3c5695f7917d194b547569\",\r\n                    prevHash: \"\",\r\n                    nonce: 0\r\n                }\r\n            ],\r\n            pendingTransactions: [],\r\n            rejectedTransactions: []\r\n        },\r\n        selectedTxn: [],\r\n        modelTitle: ''\r\n    }\r\n    componentDidMount() {\r\n        this.getBlockList();\r\n    }\r\n    getBlockList = () => {\r\n        let self = this;\r\n        axios.get('/api/blockchain/chain').then(\r\n            resp => {\r\n                self.setState({\r\n                    blockChain: resp.data\r\n                }\r\n                );\r\n            },\r\n            err => {\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n\r\n    viewTxn = (txn, title) => {\r\n        this.setState({\r\n            selectedTxn: txn,\r\n            modelTitle: title\r\n        })\r\n    }\r\n\r\n    updateMyChain = () => {\r\n        let self = this;\r\n        axios.get('/api/updateMyChain').then(\r\n            resp => {\r\n                axios.get('/api/blockchain/chain').then(\r\n                    resp => {\r\n                        self.setState({\r\n                            blockChain: resp.data\r\n                        });\r\n                    },\r\n                    err => {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n            },\r\n            err => {\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <button className='btn btn-sm btn-light' onClick={this.getBlockList}>Refresh</button>&nbsp;\r\n                <button className='btn btn-sm btn-light' data-toggle='modal' data-target='#viewTxns'\r\n                    onClick={() => this.viewTxn(this.state.blockChain.pendingTransactions, 'Pending Transactions')}>\r\n                    Pending Transactions\r\n                </button>&nbsp;\r\n                <button className='btn btn-sm btn-light' data-toggle='modal' data-target='#viewTxns'\r\n                    onClick={() => this.viewTxn(this.state.blockChain.rejectedTransactions, 'Rejected Transactions')}>\r\n                    Rejected Transactions\r\n                </button> &nbsp;\r\n                <button className='btn btn-sm btn-light' onClick={this.updateMyChain}>\r\n                    Update My Chain\r\n                </button>\r\n                <hr />\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">BlockId</th>\r\n                            <th scope=\"col\">timestamp</th>\r\n                            <th scope=\"col\">Transactions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <PrintChainList blockChain={this.state.blockChain.chain} viewTxn={this.viewTxn} />\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" id='viewTxns'>\r\n                    <div className=\"modal-dialog modal-xlg\" role=\"document\">\r\n                        <div className=\"modal-content bg-dark\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">{this.state.modelTitle}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <table className=\"table\">\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th>Txn Id</th>\r\n                                            <th>Voter</th>\r\n                                            <th>Candidate</th>\r\n                                            <th>Vote</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.selectedTxn.map(txn => <Transaction txn={txn} key={txn.id} />)}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\nconst Candidates = [\r\n    { id: 1, name: 'Arasur Manoharan S', symbol: 'AR', party: 'BSP' ,count:0},\r\n    { id: 2, name: 'Sreenivasan C', symbol: 'SC', party: 'AIADMK' ,count:0},\r\n    { id: 3, name: 'Thirumalai Balaji T.A', symbol: 'TA', party: 'BJP' ,count:0},\r\n    { id: 4, name: 'Pandi N', symbol: 'AR', party: 'CPM' ,count:0},\r\n    { id: 5, name: 'Kumarappan R', symbol: 'KR', party: 'INDEPENDENT' ,count:0},\r\n    { id: 6, name: 'Parasuraman R', symbol: 'PR', party: 'PMK' ,count:0},\r\n    { id: 7, name: 'Balaji C.K', symbol: 'BC', party: 'SHS' ,count:0},\r\n    { id: 8, name: 'Katchi Ganesan M.P', symbol: 'KG', party: 'Naam Tamilar',count:0 },\r\n    { id: 9, name: 'Philipdas A', symbol: 'PD', party: 'TVK' ,count:0}\r\n]\r\n\r\nexport default Candidates;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Candidates from './Candidate';\r\n\r\nconst CandidateTag = (props) => {\r\n    return (\r\n        props.candidates.map(cnd => {\r\n            return (<tr>\r\n                <td>\r\n                    <span className='radio'>\r\n                        <input name='candidate' type=\"radio\" value={cnd.id} id={cnd.id} onChange={props.handleChange} />\r\n                    </span>\r\n                </td>\r\n                <td>\r\n                    <span className=\"symbol\">{cnd.symbol}</span>\r\n                </td>\r\n                <td>{cnd.name}</td>\r\n                <td>{cnd.party}</td>\r\n            </tr>)\r\n        })\r\n    );\r\n}\r\n\r\n\r\nclass Vote extends Component {\r\n\r\n    state = {\r\n        candidates: Candidates,\r\n        selectedId: 0,\r\n        alreadyVoted: false,\r\n        voteStatus: 'Please Vote',\r\n        user:''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLoggedInUser();\r\n               \r\n    }\r\n\r\n    getLoggedInUser = () => {\r\n        axios.get('/login/getUser').then(\r\n            resp => {\r\n                this.setState({\r\n                    user: resp.data.user.username,\r\n                });\r\n                this.checkMyVote(resp.data.user.username);\r\n                this.myTransactionStatus(resp.data.user.username);\r\n            });\r\n    }\r\n\r\n    myTransactionStatus = (usr) => {\r\n        let self = this;\r\n        axios.get('/api/myTransactionStatus?user=' + usr).then(\r\n            resp => {\r\n                self.setState({\r\n                    voteStatus: resp.data\r\n                });\r\n            },\r\n            err => {\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n\r\n    checkMyVote = (usr) => {\r\n        let self = this;\r\n        axios.get('/api/checkMyVote?user=' + usr).then(\r\n            resp => {\r\n                self.setState({\r\n                    alreadyVoted: resp.data\r\n                }\r\n                );\r\n            },\r\n            err => {\r\n                console.log(err);\r\n            }\r\n        )\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            selectedId: event.target.value\r\n        });\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.selectedId == 0) {\r\n            alert(\"Please select a candidate\");\r\n            return;\r\n        }\r\n        let self = this;\r\n\r\n        let seleCand = Candidates.find((cnd) => {\r\n            return cnd.id == this.state.selectedId\r\n        });\r\n        let candidateName = seleCand.name;\r\n        axios.post('/api/transaction', {\r\n            voter: this.state.user,\r\n            candidate: candidateName\r\n        }).then(function (response) {\r\n            console.log(response);\r\n            self.setState({\r\n                alreadyVoted: true\r\n            });\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <div className=\"alert alert-success\" role=\"alert\">\r\n                    <button className='btn btn-sm btn-success' onClick={()=>this.myTransactionStatus(this.state.user)}>Check Status</button>\r\n                    <br />\r\n                    Status of your vote is : {this.state.voteStatus}\r\n                </div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <button className='btn btn-sm btn-light' type='submit' disabled={this.state.alreadyVoted}>Cast Vote</button>&nbsp;\r\n                <hr />\r\n                    <table className=\"table\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Select</th>\r\n                                <th scope=\"col\">Symbol </th>\r\n                                <th scope=\"col\">Candidate</th>\r\n                                <th scope=\"col\">Party</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <CandidateTag candidates={this.state.candidates} key={this.state.candidates.id} handleChange={this.handleChange} />\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Vote;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Candidates from './Candidate';\r\n\r\nconst CandidateTag = (props) => {\r\n    return (\r\n        props.candidates.map(cnd => {\r\n            return (<tr>\r\n                <td>\r\n                    <span className=\"symbol\">{cnd.symbol}</span>\r\n                </td>\r\n                <td>{cnd.name}</td>\r\n                <td>{cnd.party}</td>\r\n                <td>{cnd.count}</td>\r\n            </tr>)\r\n        })\r\n    );\r\n}\r\n\r\n\r\nclass Result extends Component {\r\n    state = {\r\n        candidates: Candidates\r\n    }\r\n  componentDidMount() {\r\n        this.votingCount();\r\n    }\r\n    votingCount = () => {\r\n        let self=this\r\n        axios.post('/api/countVote',{candidates:Candidates})\r\n            .then(resp => {\r\n                self.setState({\r\n                    candidates: resp.data.candidates\r\n                });\r\n            })\r\n    }\r\n\r\n    mine = () => {\r\n        let self=this\r\n        axios.get('/api/mine')\r\n            .then(resp => {\r\n                alert(resp.data.message);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <button className='btn btn-white' onClick={this.votingCount}>Refresh</button>&nbsp;\r\n                <button className='btn btn-success' onClick={this.mine}>mine</button>\r\n                <hr />\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">Symbol </th>\r\n                            <th scope=\"col\">Candidate</th>\r\n                            <th scope=\"col\">Party</th>\r\n                            <th scope=\"col\">Vote Count</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <CandidateTag candidates={this.state.candidates} key={this.state.candidates.id} />\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\nimport voteImg from './voteIcon.png';\nimport './App.css';\nimport { Switch, Route, Link } from 'react-router-dom'\nimport Home from './Component/Home';\nimport Vote from './Component/Vote';\nimport Result from './Component/Result';\nimport axios from 'axios';\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route exact path='/vote' component={Vote} />\n      <Route exact path='/result' component={Result} />\n    </Switch>\n  </main>\n)\n\nconst Menu = () => (\n  <nav className='nav nav-pills nav-justified'>\n    <Link to='/' className='nav-link'>Home</Link>\n    <Link to='/vote' className='nav-link'>Vote</Link>\n    <Link to='/result' className='nav-link'>Result</Link>\n  </nav>\n)\n\nclass App extends Component {\n  state = {\n    user: '',\n    connectedUrl: ''\n  }\n\n  componentDidMount() {\n    axios.get('/login/getUser').then(\n      resp => {\n        this.setState({\n          user: resp.data.user.username,\n          connectedUrl: resp.data.user.connectedUrl\n        });\n      });\n  }\n  \n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-4\">\n          <Menu />\n          <hr />\n          <div className=\"display-1 m-b-2\">\n            Blector\n        </div>\n          <img src={voteImg} className=\"logo\" alt=\"Blector Logo\" />\n          <hr />\n          <p>Election using block chain technology</p>\n          <span>Connected to :{this.state.connectedUrl} </span>\n        </div>\n        <div className='col-sm-8 content'>\n          <div className=\"col-md-12 col-md-offset-3\">\n            Welcome :{this.state.user}\n            <Main />\n          </div>\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}